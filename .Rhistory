print(objetos)
}
for (names(objetos) in tissue_list){
for (names(objetos) in tissue_list)){
for (names(objetos) in tissue_list){
for (names(objetos) in tissue_list){
for (objetos in tissue_list){
print(names(objetos))
}
for (objetos in names(tissue_list)){
print(objetos)
}
View(tissue_list)
lista_grafico <- list()
for (objetos in names(tissue_list)){
lista_grafico[[objetos]] <- plot_umap(tissue_list[[objetos]])
}
wrap_plots(lista_grafico)
wrap_plots(lista_grafico, ncol = 2, nrow = 5)
wrap_plots(lista_grafico, ncol = 5, nrow = 2)
library(readr)
# Loading relevant libraries
library(tidyverse) # includes ggplot2, for data visualisation. dplyr, for data manipulation.
library(RColorBrewer) # for a colourful plot
library(ggrepel) # for nice annotations
library(ggpubr)
library(ggplot2)
setwd("~/Documents/New graphs")
library(readr)
PCA_names_LIVER <- read_csv("PCA_names_LIVER.csv")
View(PCA_names_LIVER)
count_data_list_rnaseq <- readRDS("~/Documents/CaCaoDB_2.0/count_data_list_rnaseq.rds")
Sample_annotation_rnaseq_SHINY <- readRDS("~/Documents/CaCaoDB_2.0/Sample_annotation_rnaseq_SHINY.rds")
####################PCA###########
library(ggplot2)
library(dplyr)
library(factoextra)
library(matrixStats)
library(ggpubr)
library(FactoMineR)
dfx <- count_data_list_rnaseq$`01_RLOG_MUSCLE_200123310_Zimmers_2021_MusMusculus.tsv`
head(dfx)
head(df.f)
df.f <- Sample_annotation_rnaseq_SHINY %>% filter(file_rlog == "01_RLOG_MUSCLE_200123310_Zimmers_2021_MusMusculus.tsv")
df.f <- Sample_annotation_rnaseq_SHINY %>% select(c(samples, condition))
View(df.f)
df.f <- Sample_annotation_rnaseq_SHINY %>% filter(file_rlog == "01_RLOG_MUSCLE_200123310_Zimmers_2021_MusMusculus.tsv")
df.f <- df.f %>% select(c(samples, condition))
df.f$Mix <- paste(df.f$condition, sep=",")
class(dfx)
# vamos usar ntop = 500 como padr達o por hora, mas se vermos que as PCAs est達o muito ruins podemos mexer nesse valor
ntop <- 500
rv <- rowVars(as.matrix(dfx[, c(-8,-9)], useNames = TRUE))
select <- order(rv, decreasing = TRUE)[seq_len(min(ntop, length(rv)))]
mat <- t(dfx[select, ])
head(mat)
colnames(mat) <- mat["name",]
mat <- mat[c(-8, -9),]
mat
View(mat)
mat <- as.matrix(as.numeric(mat))
View(mat)
mat <- t(dfx[select, ])
head(mat)
colnames(mat) <- mat["name",]
mat <- mat[c(-8, -9),]
mat <- as.numeric(mat)
pca<-prcomp(mat)
head(pca)
al<-fviz_pca_ind(pca, invisible="quali",
col.ind=factor(df.f$condition, level=c("Control", "Cachexia"),
labels=c("Control", "Cachexia")),
addEllipses=FALSE,
pointsize=5,
labelsize=4,
geom=c("text", "point"),
legend.title="Condition",
repel=TRUE,
col.var = "black",
title = 'LIVER',
ellipse.type = "confidence",
ellipse.level= 0.95) +
theme_bw()+theme(axis.text=element_text(size=10),
axis.title=element_text(size=12),
legend.text=element_text(size=12),
legend.title = element_text(size=12),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank())+
scale_shape_manual(values=c(19,19,19,19))+
scale_size_manual(values=c(14,14,28,28))+
scale_color_viridis_d(option="viridis",begin=.2,end=.99)+
theme_bw()+theme(axis.text=element_text(size=10),axis.title=element_text(size=12),
legend.text=element_text(size=12),
legend.title = element_text(size=12),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.margin = unit(c(1,1,1,1), "cm")
)+
stat_ellipse(aes(x=x, y=y, color=df.f$Severity, group=df.f$Severity),
type = "t",
alpha = 1,
level = .8,
)
View(df.f)
al<-fviz_pca_ind(pca, invisible="quali",
col.ind=factor(df.f$Mix, level=c("Control", "Cachexia"),
labels=c("Control", "Cachexia")),
addEllipses=FALSE,
pointsize=5,
labelsize=4,
geom=c("text", "point"),
legend.title="Condition",
repel=TRUE,
col.var = "black",
title = 'LIVER',
ellipse.type = "confidence",
ellipse.level= 0.95) +
theme_bw()+theme(axis.text=element_text(size=10),
axis.title=element_text(size=12),
legend.text=element_text(size=12),
legend.title = element_text(size=12),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank())+
scale_shape_manual(values=c(19,19,19,19))+
scale_size_manual(values=c(14,14,28,28))+
scale_color_viridis_d(option="viridis",begin=.2,end=.99)+
theme_bw()+theme(axis.text=element_text(size=10),axis.title=element_text(size=12),
legend.text=element_text(size=12),
legend.title = element_text(size=12),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.margin = unit(c(1,1,1,1), "cm")
)+
stat_ellipse(aes(x=x, y=y, color=df.f$Severity, group=df.f$Severity),
type = "t",
alpha = 1,
level = .8,
)
al<-fviz_pca_ind(pca, invisible="quali",
col.ind=factor(df.f$Mix, level=c("Control", "Cachexia"),
labels=c("Control", "Cachexia")),
addEllipses=FALSE,
pointsize=5,
labelsize=4,
geom=c("text", "point"),
legend.title="Condition",
repel=TRUE,
col.var = "black",
title = 'LIVER',
ellipse.type = "confidence",
ellipse.level= 0.95) +
theme_bw()+theme(axis.text=element_text(size=10),
axis.title=element_text(size=12),
legend.text=element_text(size=12),
legend.title = element_text(size=12),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank())+
scale_shape_manual(values=c(19,19,19,19))+
scale_size_manual(values=c(14,14,28,28))+
scale_color_viridis_d(option="viridis",begin=.2,end=.99)+
theme_bw()+theme(axis.text=element_text(size=10),axis.title=element_text(size=12),
legend.text=element_text(size=12),
legend.title = element_text(size=12),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.margin = unit(c(1,1,1,1), "cm")
)+
stat_ellipse(aes(x=x, y=y, color=df.f$Mix, group=df.f$Mix),
type = "t",
alpha = 1,
level = .8,
)
View(Sample_annotation_rnaseq_SHINY)
View(df.f)
View(dfx)
View(dfx)
# vamos usar ntop = 500 como padr達o por hora, mas se vermos que as PCAs est達o muito ruins podemos mexer nesse valor
ntop <- 500
df_numeric <- dfx[, -c(8, 9)]
rv <- rowVars(df_numeric)
rv <- rowVars(df_numeric)
rv <-  rowVars(as.matrix(df_numeric))
select <- order(rv, decreasing = TRUE)[seq_len(min(ntop, length(rv)))]
mat <- t(df_numeric[select, ])
head(mat)
pca<-prcomp(mat)
head(pca)
al<-fviz_pca_ind(pca, invisible="quali",
col.ind=factor(df.f$Mix, level=c("Control", "Cachexia"),
labels=c("Control", "Cachexia")),
addEllipses=FALSE,
pointsize=5,
labelsize=4,
geom=c("text", "point"),
legend.title="Condition",
repel=TRUE,
col.var = "black",
title = 'LIVER',
ellipse.type = "confidence",
ellipse.level= 0.95) +
theme_bw()+theme(axis.text=element_text(size=10),
axis.title=element_text(size=12),
legend.text=element_text(size=12),
legend.title = element_text(size=12),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank())+
scale_shape_manual(values=c(19,19,19,19))+
scale_size_manual(values=c(14,14,28,28))+
scale_color_viridis_d(option="viridis",begin=.2,end=.99)+
theme_bw()+theme(axis.text=element_text(size=10),axis.title=element_text(size=12),
legend.text=element_text(size=12),
legend.title = element_text(size=12),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.margin = unit(c(1,1,1,1), "cm")
)+
stat_ellipse(aes(x=x, y=y, color=df.f$Mix, group=df.f$Mix),
type = "t",
alpha = 1,
level = .8,
)
al
library(purrr)
df_final <- reduce(
.x = c("samples", "condition"),
.f = ~ cbind(.x, Sample_annotation_rnaseq_SHINY[[.y]]),  # Combina colunas iterativamente
.init = data.frame()           # DataFrame vazio inicial
)
df_combinado <- reduce(Sample_annotation_rnaseq_SHINY, ~ bind_rows(.x, .y %>% select(sample, condition)))
df_combinado <- reduce(Sample_annotation_rnaseq_SHINY, ~ bind_rows(.x, .y %>% select(sample, condition)))
View(df.f)
df_combinado <- reduce(Sample_annotation_rnaseq_SHINY, ~ bind_rows(.x, .y %>% select(samples, condition)))
View(Sample_annotation_rnaseq_SHINY)
df.f <- Sample_annotation_rnaseq_SHINY %>% select(c(samples, condition, file_rlog))
View(count_data_list_rnaseq)
View(count_data_list_rnaseq[["022_RLOG_4T1_Muscle_200112204_Kandpal_2018_MusMusculus.tsv"]])
View(count_data_list_rnaseq[["02_RLOG_ADIPOSE_200123310_Zimmers_2021_MusMusculus.tsv"]])
pca_plot <- function(df){
Sample_annotation_rnaseq_SHINY <- Sample_annotation_rnaseq_SHINY %>% select(c(samples, condition))
ntop <- 500
df_numeric <- df[, -c("gene", "name")]
rv <-  rowVars(as.matrix(df_numeric))
select <- order(rv, decreasing = TRUE)[seq_len(min(ntop, length(rv)))]
mat <- t(df_numeric[select, ])
head(mat)
pca<-prcomp(mat)
head(pca)
al<-fviz_pca_ind(pca, invisible="quali",
col.ind=factor(df.f$Mix, level=c("Control", "Cachexia"),
labels=c("Control", "Cachexia")),
addEllipses=FALSE,
pointsize=5,
labelsize=4,
geom=c("text", "point"),
legend.title="Condition",
repel=TRUE,
col.var = "black",
title = 'LIVER',
ellipse.type = "confidence",
ellipse.level= 0.95) +
theme_bw()+theme(axis.text=element_text(size=10),
axis.title=element_text(size=12),
legend.text=element_text(size=12),
legend.title = element_text(size=12),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank())+
scale_shape_manual(values=c(19,19,19,19))+
scale_size_manual(values=c(14,14,28,28))+
scale_color_viridis_d(option="viridis",begin=.2,end=.99)+
theme_bw()+theme(axis.text=element_text(size=10),axis.title=element_text(size=12),
legend.text=element_text(size=12),
legend.title = element_text(size=12),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.margin = unit(c(1,1,1,1), "cm")
)+
stat_ellipse(aes(x=x, y=y, color=df.f$Mix, group=df.f$Mix),
type = "t",
alpha = 1,
level = .8,
)
print(al)
return(al)
}
dfx <- count_data_list_rnaseq$`01_RLOG_MUSCLE_200123310_Zimmers_2021_MusMusculus.tsv`
df.f <- Sample_annotation_rnaseq_SHINY %>% select(c(samples, condition))
df.f$Mix <- paste(df.f$condition, sep=",")
View(Sample_annotation_rnaseq_SHINY)
pca_plot <- function(df, df_name){
df.f <- Sample_annotation_rnaseq_SHINY %>% filter(file_rlog == df_name)
df.f <- Sample_annotation_rnaseq_SHINY %>% select(c(samples, condition))
df.f$Mix <- paste(df.f$condition, sep=",")
ntop <- 500
df_numeric <- df[, -c("gene", "name")]
rv <-  rowVars(as.matrix(df_numeric))
select <- order(rv, decreasing = TRUE)[seq_len(min(ntop, length(rv)))]
mat <- t(df_numeric[select, ])
head(mat)
pca<-prcomp(mat)
head(pca)
al<-fviz_pca_ind(pca, invisible="quali",
col.ind=factor(df.f$Mix, level=c("Control", "Cachexia"),
labels=c("Control", "Cachexia")),
addEllipses=FALSE,
pointsize=5,
labelsize=4,
geom=c("text", "point"),
legend.title="Condition",
repel=TRUE,
col.var = "black",
title = 'LIVER',
ellipse.type = "confidence",
ellipse.level= 0.95) +
theme_bw()+theme(axis.text=element_text(size=10),
axis.title=element_text(size=12),
legend.text=element_text(size=12),
legend.title = element_text(size=12),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank())+
scale_shape_manual(values=c(19,19,19,19))+
scale_size_manual(values=c(14,14,28,28))+
scale_color_viridis_d(option="viridis",begin=.2,end=.99)+
theme_bw()+theme(axis.text=element_text(size=10),axis.title=element_text(size=12),
legend.text=element_text(size=12),
legend.title = element_text(size=12),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.margin = unit(c(1,1,1,1), "cm")
)+
stat_ellipse(aes(x=x, y=y, color=df.f$Mix, group=df.f$Mix),
type = "t",
alpha = 1,
level = .8,
)
print(al)
return(al)
}
dfx <- count_data_list_rnaseq$`01_RLOG_MUSCLE_200123310_Zimmers_2021_MusMusculus.tsv`
pca_plot(dfx, "01_RLOG_MUSCLE_200123310_Zimmers_2021_MusMusculus.tsv")
pca_plot <- function(df, df_name){
df.f <- Sample_annotation_rnaseq_SHINY %>% filter(file_rlog == df_name)
df.f <- Sample_annotation_rnaseq_SHINY %>% select(c(samples, condition))
df.f$Mix <- paste(df.f$condition, sep=",")
ntop <- 500
df_numeric <- df %>% select(!c("gene", "name")]
pca_plot <- function(df, df_name){
df.f <- Sample_annotation_rnaseq_SHINY %>% filter(file_rlog == df_name)
df.f <- Sample_annotation_rnaseq_SHINY %>% select(c(samples, condition))
df.f$Mix <- paste(df.f$condition, sep=",")
ntop <- 500
df_numeric <- df %>% select(!c("gene", "name"))
rv <-  rowVars(as.matrix(df_numeric))
select <- order(rv, decreasing = TRUE)[seq_len(min(ntop, length(rv)))]
mat <- t(df_numeric[select, ])
head(mat)
pca<-prcomp(mat)
head(pca)
al<-fviz_pca_ind(pca, invisible="quali",
col.ind=factor(df.f$Mix, level=c("Control", "Cachexia"),
labels=c("Control", "Cachexia")),
addEllipses=FALSE,
pointsize=5,
labelsize=4,
geom=c("text", "point"),
legend.title="Condition",
repel=TRUE,
col.var = "black",
title = 'LIVER',
ellipse.type = "confidence",
ellipse.level= 0.95) +
theme_bw()+theme(axis.text=element_text(size=10),
axis.title=element_text(size=12),
legend.text=element_text(size=12),
legend.title = element_text(size=12),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank())+
scale_shape_manual(values=c(19,19,19,19))+
scale_size_manual(values=c(14,14,28,28))+
scale_color_viridis_d(option="viridis",begin=.2,end=.99)+
theme_bw()+theme(axis.text=element_text(size=10),axis.title=element_text(size=12),
legend.text=element_text(size=12),
legend.title = element_text(size=12),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.margin = unit(c(1,1,1,1), "cm")
)+
stat_ellipse(aes(x=x, y=y, color=df.f$Mix, group=df.f$Mix),
type = "t",
alpha = 1,
level = .8,
)
print(al)
return(al)
}
pca_plot(dfx, "01_RLOG_MUSCLE_200123310_Zimmers_2021_MusMusculus.tsv")
class(dfx)
dfx <- as.matrix(dfx)
# vamos usar ntop = 500 como padr達o por hora, mas se vermos que as PCAs est達o muito ruins podemos mexer nesse valor
ntop <- 500
df_numeric <- dfx[, -c(8, 9)]
rv <-  rowVars(as.matrix(df_numeric))
dfx <- count_data_list_rnaseq$`01_RLOG_MUSCLE_200123310_Zimmers_2021_MusMusculus.tsv`
# vamos usar ntop = 500 como padr達o por hora, mas se vermos que as PCAs est達o muito ruins podemos mexer nesse valor
ntop <- 500
df_numeric <- dfx[, -c(8, 9)]
rv <-  rowVars(as.matrix(df_numeric))
select <- order(rv, decreasing = TRUE)[seq_len(min(ntop, length(rv)))]
mat <- t(df_numeric[select, ])
head(mat)
pca<-prcomp(mat)
head(pca)
al<-fviz_pca_ind(pca, invisible="quali",
col.ind=factor(df.f$Mix, level=c("Control", "Cachexia"),
labels=c("Control", "Cachexia")),
addEllipses=FALSE,
pointsize=5,
labelsize=4,
geom=c("text", "point"),
legend.title="Condition",
repel=TRUE,
col.var = "black",
title = 'LIVER',
ellipse.type = "confidence",
ellipse.level= 0.95) +
theme_bw()+theme(axis.text=element_text(size=10),
axis.title=element_text(size=12),
legend.text=element_text(size=12),
legend.title = element_text(size=12),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank())+
scale_shape_manual(values=c(19,19,19,19))+
scale_size_manual(values=c(14,14,28,28))+
scale_color_viridis_d(option="viridis",begin=.2,end=.99)+
theme_bw()+theme(axis.text=element_text(size=10),axis.title=element_text(size=12),
legend.text=element_text(size=12),
legend.title = element_text(size=12),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.margin = unit(c(1,1,1,1), "cm")
)+
stat_ellipse(aes(x=x, y=y, color=df.f$Mix, group=df.f$Mix),
type = "t",
alpha = 1,
level = .8,
)
pca_plot <- function(df, df_name){
df.f <- Sample_annotation_rnaseq_SHINY %>% filter(file_rlog == df_name)
df.f <- df.f %>% select(c(samples, condition))
df.f$Mix <- paste(df.f$condition, sep=",")
ntop <- 500
df_numeric <- df %>% select(!c("gene", "name"))
rv <-  rowVars(as.matrix(df_numeric))
select <- order(rv, decreasing = TRUE)[seq_len(min(ntop, length(rv)))]
mat <- t(df_numeric[select, ])
head(mat)
pca<-prcomp(mat)
head(pca)
al<-fviz_pca_ind(pca, invisible="quali",
col.ind=factor(df.f$Mix, level=c("Control", "Cachexia"),
labels=c("Control", "Cachexia")),
addEllipses=FALSE,
pointsize=5,
labelsize=4,
geom=c("text", "point"),
legend.title="Condition",
repel=TRUE,
col.var = "black",
title = 'LIVER',
ellipse.type = "confidence",
ellipse.level= 0.95) +
theme_bw()+theme(axis.text=element_text(size=10),
axis.title=element_text(size=12),
legend.text=element_text(size=12),
legend.title = element_text(size=12),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank())+
scale_shape_manual(values=c(19,19,19,19))+
scale_size_manual(values=c(14,14,28,28))+
scale_color_viridis_d(option="viridis",begin=.2,end=.99)+
theme_bw()+theme(axis.text=element_text(size=10),axis.title=element_text(size=12),
legend.text=element_text(size=12),
legend.title = element_text(size=12),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.margin = unit(c(1,1,1,1), "cm")
)+
stat_ellipse(aes(x=x, y=y, color=df.f$Mix, group=df.f$Mix),
type = "t",
alpha = 1,
level = .8,
)
print(al)
return(al)
}
pca_plot(dfx, "01_RLOG_MUSCLE_200123310_Zimmers_2021_MusMusculus.tsv")
shiny::runApp('~/Documents/CaCaoDB_2.0')
shiny::runApp('~/Documents/CaCaoDB_2.0')
library(bslib)
setwd("~/Documents/CaCaoDB_2.0")
setwd("~/Documents/CaCaoDB_2.0")
shiny::runApp('~/Documents/CaCaoDB_2.0')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
