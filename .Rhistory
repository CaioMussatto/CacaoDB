scale_fill_manual(values = conditions_colors)+
scale_color_manual(values = conditions_colors)+
xlab("Expression levels") +
ylab("") +
labs( colour='condition')
p
#-----------------------
filtered_deg_combined_df$value <-0
filtered_deg_combined_df$padj <- as.numeric(filtered_deg_combined_df$padj)
filtered_deg_combined_df$pvalue <- as.numeric(filtered_deg_combined_df$pvalue)
p1 <- ggplot(filtered_deg_combined_df, aes(x = value, y = cacaoStudyID))+
geom_text(
fill='#edede9',
size=3,
label.size = 0.025,
label.padding = unit(0.25, "lines"),
label= round(filtered_deg_combined_df$padj,4)
)+
theme(axis.text.y = element_blank(),
axis.text.x = element_blank(),
legend.position="none",
panel.grid.major.y = element_line(linewidth = 0.25,color='#a2a2a260',linetype = "dotted"),
panel.background = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.title.x = element_text(size = 10,face='bold'))+
xlab("adj P.val") +
ylab("") + xlim(-0.0025,0.0025)
p1
p2 <- ggplot(filtered_deg_combined_df, aes(x = value, y = cacaoStudyID))+
geom_text(
fill='#edede9',
size=3,
label.size = 0.025,
label.padding = unit(0.25, "lines"),
label= round(filtered_deg_combined_df$pvalue,4)
)+
theme(axis.text.y = element_blank(),
axis.text.x = element_blank(),
legend.position="none",
panel.grid.major.y = element_line(linewidth = 0.25,color='#a2a2a260',linetype = "dotted"),
panel.background = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.title.x = element_text(size = 10,face='bold'))+
xlab("P.value") +
ylab("") + xlim(-0.0025,0.0025)
p2
p00 <- ggplot(filtered_deg_combined_df, aes(x = value, y = cacaoStudyID))+
geom_text(
fill='#edede9',
size=3,
label.size = 0.025,
label.padding = unit(0.25, "lines"),
label= filtered_deg_combined_df$author
)+
theme(axis.text.y = element_blank(),
axis.text.x = element_blank(),
legend.position="none",
panel.grid.major.y = element_line(linewidth = 0.25,color='#a2a2a260',linetype = "dotted"),
panel.background = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.title.x = element_text(size = 10,face='bold'))+
xlab("Author") +
ylab("") + xlim(-0.0025,0.0025)
p00
p0 <- ggplot(filtered_deg_combined_df, aes(x = value, y = cacaoStudyID))+
geom_text(
fill='#edede9',
size=3,
label.size = 0.025,
label.padding = unit(0.25, "lines"),
label= filtered_deg_combined_df$year
)+
theme(axis.text.y = element_blank(),
axis.text.x = element_blank(),
legend.position="none",
panel.grid.major.y = element_line(linewidth = 0.25,color='#a2a2a260',linetype = "dotted"),
panel.background = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.title.x = element_text(size = 10,face='bold'))+
xlab("Year") +
ylab("") + xlim(-0.0025,0.0025)
p0
p01 <- ggplot(filtered_deg_combined_df, aes(x = value, y = cacaoStudyID))+
geom_text(
fill='#edede9',
size=3,
label.size = 0.025,
label.padding = unit(0.25, "lines"),
label= filtered_deg_combined_df$tissue
)+
theme(axis.text.y = element_blank(),
axis.text.x = element_blank(),
legend.position="none",
panel.grid.major.y = element_line(linewidth = 0.25,color='#a2a2a260',linetype = "dotted"),
panel.background = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.title.x = element_text(size = 10,face='bold'))+
xlab("Tissue") +
ylab("") + xlim(-0.0025,0.0025)
p01
p02 <- ggplot(filtered_deg_combined_df, aes(x = value, y = cacaoStudyID))+
geom_text(
fill='#edede9',
size=3,
label.size = 0.025,
label.padding = unit(0.25, "lines"),
label= filtered_deg_combined_df$code
)+
theme(axis.text.y = element_blank(),
axis.text.x = element_blank(),
legend.position="none",
panel.grid.major.y = element_line(linewidth = 0.25,color='#a2a2a260',linetype = "dotted"),
panel.background = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.title.x = element_text(size = 10,face='bold'))+
xlab("GEO Code") +
ylab("") + xlim(-0.0025,0.0025)
p02
p03 <- ggplot(filtered_deg_combined_df, aes(x = value, y = cacaoStudyID))+
geom_text(
fill='#edede9',
size=3,
label.size = 0.025,
label.padding = unit(0.25, "lines"),
label= filtered_deg_combined_df$cacaoStudyID
)+
theme(axis.text.y = element_blank(),
axis.text.x = element_blank(),
legend.position="none",
panel.grid.major.y = element_line(linewidth = 0.25,color='#a2a2a260',linetype = "dotted"),
panel.background = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.title.x = element_text(size = 10,face='bold'))+
xlab("CaCaO ID") +
ylab("") + xlim(-0.0025,0.0025)
p03
pp_list <- list(p00,p0,p01,p02,p03,p,pp,p1,p2)
pp3 <- wrap_plots(pp_list,ncol=9)+plot_layout(widths =c(0.8,0.4,1.2,0.8,1.2,2.8,2.8,0.5,0.5), heights = 1, ncol=9)+
plot_annotation(gene_select, caption = 'CacaO Lab',theme=theme(plot.title=element_text(hjust=0.5, size = 15, face='bold')))
print(pp3)
return(pp3)
}
filtered_deg_combined_df <- do.call(cbind, lapply(Deg_data_list_Microarray, function(df) {
filtered_df <- df[df$Gene.symbol == gene_select, ]
filtered_df <- na.omit(filtered_df)
filtered_df <- filtered_df[,-which(names(filtered_df) %in% c('Gene.symbol',2))]
filtered_df <- as.data.frame(t(filtered_df))
}))
names(filtered_deg_combined_df) <- filtered_deg_combined_df['file_deg',]
filtered_deg_combined_df <- as.data.frame(t(filtered_deg_combined_df))
filtered_combined_df <- do.call(rbind, lapply(count_data_list_Microarray, function(df) {
filtered_df <- df[which(df$Gene.symbol == gene_select),]
if(nrow(filtered_df) >0 ){
filtered_df <- na.omit(filtered_df)
filtered_df <- filtered_df[,-which(names(filtered_df) %in% c('Gene.symbol','ID'))]
rownames(filtered_df) <- gene_select
filtered_df <- as.data.frame(t(filtered_df))}
}))
names(filtered_combined_df) <- 'expression'
filtered_combined_df$sample <- unlist(lapply(rownames(filtered_combined_df), function(x){str_split(x,'tsv.')[[1]][2] }))
filtered_combined_df$file_matrix <- unlist(lapply(rownames(filtered_combined_df), function(x){paste(unlist(str_split(x,'tsv.')[[1]][1]),'tsv',sep='') }))
rfile= filtered_combined_df[row,'file_matrix']}
for (row in 1:nrow(filtered_combined_df)) {
rsample= filtered_combined_df[row,'sample']
rfile= filtered_combined_df[row,'file_matrix']
}
filtered_combined_df <- merge(filtered_combined_df, Sample_annotation_mca_SHINY, by=c('file_matrix'))
View(filtered_combined_df)
print(filtered_combined_df$file_matrix)
filtered_combined_df$condition <- as.factor(filtered_combined_df$condition)
filtered_combined_df$code <- as.factor(filtered_combined_df$code)
filtered_combined_df$expression <-as.numeric(filtered_combined_df$expression)
filtered_combined_df <- filter(filtered_combined_df, cacaoStudyID %in% filter_tables$cacaoStudyID)
row.names(filtered_combined_df) <- filtered_combined_df$cacaoID
row.names(filtered_combined_df) <- unique(filtered_combined_df$cacaoID)
View(filtered_combined_df)
filtered_combined_df <- unique(filtered_combined_df)
View(filtered_deg_combined_df)
View(filtered_combined_df)
filtered_combined_df <- filtered_combined_df %>%
filter(unique(cacaoID))
filtered_combined_df <- filtered_combined_df[!duplicated(filtered_combined_df$cacaoID),]
row.names(filtered_combined_df) <- filtered_combined_df$cacaoID
conditions_colors <- c('Control'='#4361ee','Cachexia'='#f72585')
p<-ggplot(filtered_combined_df, aes(y=cacaoStudyID, x=expression,fill=condition, color=condition))+
geom_boxplot(alpha=75,outlier.size = 0.5,size = 0.5) +
theme(legend.position="bottom",
title = element_text(face='bold'),
legend.title = element_text(size=10,face='bold'),
legend.text = element_text(size=10),
axis.text.y = element_blank(),
axis.text.x = element_text(size = 10,face = 'bold'),
panel.background = element_blank(),
panel.grid.major.y = element_line(linewidth = 0.25,color='#a2a2a2df',linetype = "dotted"),
axis.title.x = element_text(size = 10,face='bold')
# panel.grid.minor.x = element_line(size = 0.75,color='#454545',linetype = "dotted")
) +
scale_fill_manual(values = conditions_colors)+
scale_color_manual(values = conditions_colors)+
xlab("Expression levels") +
ylab("") +
labs( colour='condition')
p
filtered_deg_combined_df$value <-0
filtered_deg_combined_df$padj <- as.numeric(filtered_deg_combined_df$padj)
filtered_deg_combined_df$pvalue <- as.numeric(filtered_deg_combined_df$pvalue)
filtered_deg_combined_df$value <-0
filtered_deg_combined_df$padj <- as.numeric(filtered_deg_combined_df$padj)
View(filtered_deg_combined_df)
iris <- as_tibble(iris
)
iris
colnames(filtered_deg_combined_df)[c(2,3,4)] <- c("padj", "pvalue", "logFC")
filtered_deg_combined_df$value <-0
filtered_deg_combined_df$padj <- as.numeric(filtered_deg_combined_df$padj)
filtered_deg_combined_df$pvalue <- as.numeric(filtered_deg_combined_df$pvalue)
p1 <- ggplot(filtered_deg_combined_df, aes(x = value, y = cacaoStudyID))+
geom_text(
fill='#edede9',
size=3,
label.size = 0.025,
label.padding = unit(0.25, "lines"),
label= round(filtered_deg_combined_df$padj,4)
)+
theme(axis.text.y = element_blank(),
axis.text.x = element_blank(),
legend.position="none",
panel.grid.major.y = element_line(linewidth = 0.25,color='#a2a2a260',linetype = "dotted"),
panel.background = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.title.x = element_text(size = 10,face='bold'))+
xlab("adj P.val") +
ylab("") + xlim(-0.0025,0.0025)
p1
filtered_deg_combined_df <- do.call(cbind, lapply(Deg_data_list_Microarray, function(df) {
filtered_df <- df[df$Gene.symbol == gene_select, ]
filtered_df <- na.omit(filtered_df)
filtered_df <- filtered_df[,-which(names(filtered_df) %in% c('Gene.symbol',2))]
filtered_df <- as.data.frame(t(filtered_df))
}))
names(filtered_deg_combined_df) <- filtered_deg_combined_df['file_deg',]
filtered_deg_combined_df <- as.data.frame(t(filtered_deg_combined_df))
filtered_deg_combined_df <- merge(filtered_deg_combined_df, Sample_annotation_mca_SHINY,by='file_deg', all.x = T)
filtered_deg_combined_df <- na.omit(filtered_deg_combined_df)
filtered_deg_combined_df <- filtered_deg_combined_df[!duplicated(filtered_deg_combined_df$file_deg),]
log_Fc_col <- which(str_detect(names(filtered_deg_combined_df),'logFC_'))
filtered_deg_combined_df[,log_Fc_col] <- as.numeric(filtered_deg_combined_df[,log_Fc_col])
pval_Fc_col <- which(str_detect(names(filtered_deg_combined_df),'P.Value'))
padjval_Fc_col <- which(str_detect(names(filtered_deg_combined_df),'adj.P'))
names(filtered_deg_combined_df)[log_Fc_col] <- 'log2FoldChange'
names(filtered_deg_combined_df)[pval_Fc_col] <- 'pvalue'
names(filtered_deg_combined_df)[padjval_Fc_col] <- 'padj'
filtered_deg_combined_df <- filtered_deg_combined_df%>%
mutate(Differential_expression = case_when(log2FoldChange >0 ~ 'Up', log2FoldChange <0 ~ 'Down'))
print(filtered_deg_combined_df$log2FoldChange)
filtered_deg_combined_df$Differential_expression <- as.factor(filtered_deg_combined_df$Differential_expression)
if (organism == "Mus Musculus"){
filtered_deg_combined_df <- filter(filtered_deg_combined_df, cacaoStudyID %in% filter_tables$cacaoStudyID)
}
deg_colors <- c('Up' ='#ef233c','Down'='#023e8a')
pp <- ggplot(filtered_deg_combined_df, aes(x = cacaoStudyID, y = log2FoldChange,fill=Differential_expression)) +
geom_bar(stat = "identity") +
geom_text(aes(label = round(log2FoldChange, 2),
hjust = ifelse(log2FoldChange < 0, 1.5, -1),
vjust = 0.5),
size = 3) +
theme(
axis.text.y = element_blank(),
axis.text.x = element_text(size = 10,face = 'bold'),
legend.position="bottom",
legend.title = element_text(size=10,face='bold'),
legend.text = element_text(size=10),
panel.grid.major.y = element_line(linewidth = 0.25,color='#a2a2a2',linetype = "dotted"),
panel.background = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.title.x = element_text(size = 10,face='bold'))+
scale_fill_manual(values = deg_colors)+
xlab("") +
ylab("log2FoldChange") +
guides(fill=guide_legend(title="DEG's"))+
labs(colour='Differential_expression')+
coord_flip()+
geom_hline(yintercept = c(-1,1), col = "#cdb4db",show.legend = T)+
scale_y_continuous(breaks= seq(round(min(filtered_deg_combined_df$log2FoldChange) - 0.5),
round(max(filtered_deg_combined_df$log2FoldChange) + 0.5), by = 1),
limits = c(min(filtered_deg_combined_df$log2FoldChange) - 0.5,
max(filtered_deg_combined_df$log2FoldChange) + 0.5))
print("pp gerado com sucesso")
pp
View(filtered_deg_combined_df)
filtered_combined_df <- do.call(rbind, lapply(count_data_list_Microarray, function(df) {
filtered_df <- df[which(df$Gene.symbol == gene_select),]
if(nrow(filtered_df) >0 ){
filtered_df <- na.omit(filtered_df)
filtered_df <- filtered_df[,-which(names(filtered_df) %in% c('Gene.symbol','ID'))]
rownames(filtered_df) <- gene_select
filtered_df <- as.data.frame(t(filtered_df))}
}))
print(filtered_combined_df)
names(filtered_combined_df) <- 'expression'
filtered_combined_df$sample <- unlist(lapply(rownames(filtered_combined_df), function(x){str_split(x,'tsv.')[[1]][2] }))
filtered_combined_df$file_matrix <- unlist(lapply(rownames(filtered_combined_df), function(x){paste(unlist(str_split(x,'tsv.')[[1]][1]),'tsv',sep='') }))
for (row in 1:nrow(filtered_combined_df)) {
rsample= filtered_combined_df[row,'sample']
rfile= filtered_combined_df[row,'file_matrix']
}
if (organism == "Mus Musculus"){
filtered_combined_df <- merge(filtered_combined_df, Sample_annotation_mca_SHINY,by=c('file_matrix'))
}
filtered_combined_df <- merge(filtered_combined_df, Sample_annotation_mca_SHINY, by=c('file_matrix'))
print(filtered_combined_df$file_matrix)
filtered_combined_df$condition <- as.factor(filtered_combined_df$condition)
filtered_combined_df$code <- as.factor(filtered_combined_df$code)
filtered_combined_df$expression <-as.numeric(filtered_combined_df$expression)
filtered_combined_df <- filter(filtered_combined_df, cacaoStudyID %in% filter_tables$cacaoStudyID)
View(filtered_deg_combined_df)
filtered_deg_combined_df$value <-0
filtered_deg_combined_df$padj <- as.numeric(filtered_deg_combined_df$padj)
filtered_deg_combined_df$pvalue <- as.numeric(filtered_deg_combined_df$pvalue)
p1 <- ggplot(filtered_deg_combined_df, aes(x = value, y = cacaoStudyID))+
geom_text(
fill='#edede9',
size=3,
label.size = 0.025,
label.padding = unit(0.25, "lines"),
label= round(filtered_deg_combined_df$padj,4)
)+
theme(axis.text.y = element_blank(),
axis.text.x = element_blank(),
legend.position="none",
panel.grid.major.y = element_line(linewidth = 0.25,color='#a2a2a260',linetype = "dotted"),
panel.background = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.title.x = element_text(size = 10,face='bold'))+
xlab("adj P.val") +
ylab("") + xlim(-0.0025,0.0025)
p1
p2 <- ggplot(filtered_deg_combined_df, aes(x = value, y = cacaoStudyID))+
geom_text(
fill='#edede9',
size=3,
label.size = 0.025,
label.padding = unit(0.25, "lines"),
label= round(filtered_deg_combined_df$pvalue,4)
)+
theme(axis.text.y = element_blank(),
axis.text.x = element_blank(),
legend.position="none",
panel.grid.major.y = element_line(linewidth = 0.25,color='#a2a2a260',linetype = "dotted"),
panel.background = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.title.x = element_text(size = 10,face='bold'))+
xlab("P.value") +
ylab("") + xlim(-0.0025,0.0025)
p2
p00 <- ggplot(filtered_deg_combined_df, aes(x = value, y = cacaoStudyID))+
geom_text(
fill='#edede9',
size=3,
label.size = 0.025,
label.padding = unit(0.25, "lines"),
label= filtered_deg_combined_df$author
)+
theme(axis.text.y = element_blank(),
axis.text.x = element_blank(),
legend.position="none",
panel.grid.major.y = element_line(linewidth = 0.25,color='#a2a2a260',linetype = "dotted"),
panel.background = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.title.x = element_text(size = 10,face='bold'))+
xlab("Author") +
ylab("") + xlim(-0.0025,0.0025)
p00
p0 <- ggplot(filtered_deg_combined_df, aes(x = value, y = cacaoStudyID))+
geom_text(
fill='#edede9',
size=3,
label.size = 0.025,
label.padding = unit(0.25, "lines"),
label= filtered_deg_combined_df$year
)+
theme(axis.text.y = element_blank(),
axis.text.x = element_blank(),
legend.position="none",
panel.grid.major.y = element_line(linewidth = 0.25,color='#a2a2a260',linetype = "dotted"),
panel.background = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.title.x = element_text(size = 10,face='bold'))+
xlab("Year") +
ylab("") + xlim(-0.0025,0.0025)
p0
p01 <- ggplot(filtered_deg_combined_df, aes(x = value, y = cacaoStudyID))+
geom_text(
fill='#edede9',
size=3,
label.size = 0.025,
label.padding = unit(0.25, "lines"),
label= filtered_deg_combined_df$tissue
)+
theme(axis.text.y = element_blank(),
axis.text.x = element_blank(),
legend.position="none",
panel.grid.major.y = element_line(linewidth = 0.25,color='#a2a2a260',linetype = "dotted"),
panel.background = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.title.x = element_text(size = 10,face='bold'))+
xlab("Tissue") +
ylab("") + xlim(-0.0025,0.0025)
p01
p02 <- ggplot(filtered_deg_combined_df, aes(x = value, y = cacaoStudyID))+
geom_text(
fill='#edede9',
size=3,
label.size = 0.025,
label.padding = unit(0.25, "lines"),
label= filtered_deg_combined_df$code
)+
theme(axis.text.y = element_blank(),
axis.text.x = element_blank(),
legend.position="none",
panel.grid.major.y = element_line(linewidth = 0.25,color='#a2a2a260',linetype = "dotted"),
panel.background = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.title.x = element_text(size = 10,face='bold'))+
xlab("GEO Code") +
ylab("") + xlim(-0.0025,0.0025)
p02
p03 <- ggplot(filtered_deg_combined_df, aes(x = value, y = cacaoStudyID))+
geom_text(
fill='#edede9',
size=3,
label.size = 0.025,
label.padding = unit(0.25, "lines"),
label= filtered_deg_combined_df$cacaoStudyID
)+
theme(axis.text.y = element_blank(),
axis.text.x = element_blank(),
legend.position="none",
panel.grid.major.y = element_line(linewidth = 0.25,color='#a2a2a260',linetype = "dotted"),
panel.background = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.title.x = element_text(size = 10,face='bold'))+
xlab("CaCaO ID") +
ylab("") + xlim(-0.0025,0.0025)
p03
pp_list <- list(p00,p0,p01,p02,p03,p,pp,p1,p2)
pp3 <- wrap_plots(pp_list,ncol=9)+plot_layout(widths =c(0.8,0.4,1.2,0.8,1.2,2.8,2.8,0.5,0.5), heights = 1, ncol=9)+
plot_annotation(gene_select, caption = 'CacaO Lab',theme=theme(plot.title=element_text(hjust=0.5, size = 15, face='bold')))
print(pp3)
runApp()
runApp()
runApp()
View(count_data_list_Microarray)
organism = "Homo sapiens"
gene_select <- "DMD"
organism = "Homo Sapiens"
if (organism == "Homo Sapiens"){
Sample_annotation_mca_SHINY <- Sample_annotation_mca_SHINY %>%
filter(organism == "Homo sapiens")
#cat("Samples usados", Sample_annotation_rnaseq_SHINY$file_deg)
Deg_data_list_Microarray <- Deg_data_list_Microarray[Sample_annotation_rnaseq_SHINY$file_deg]
nomes_selecionados <- unique(Sample_annotation_mca_SHINY$file_matrix)
#cat("Nomes Selecionados", nomes_selecionados, "\n")
count_data_list_Microarray <- count_data_list_Microarray[intersect(names(count_data_list_Microarray), nomes_selecionados)]
#print("Count data:")
#print(count_data_list_rnaseq)
}
filtered_deg_combined_df <- do.call(cbind, lapply(Deg_data_list_Microarray, function(df) {
filtered_df <- df[df$Gene.symbol == gene_select, ]
filtered_df <- na.omit(filtered_df)
filtered_df <- filtered_df[,-which(names(filtered_df) %in% c('Gene.symbol',2))]
filtered_df <- as.data.frame(t(filtered_df))
}))
View(Deg_data_list_Microarray)
runApp()
organism = "Homo Sapiens"
gene_select <- "DMD"
if (organism == "Homo Sapiens"){
Sample_annotation_mca_SHINY <- Sample_annotation_mca_SHINY %>%
filter(organism == "Homo sapiens")
#cat("Samples usados", Sample_annotation_rnaseq_SHINY$file_deg)
Deg_data_list_Microarray <- Deg_data_list_Microarray[Sample_annotation_mca_SHINY$file_deg]
nomes_selecionados <- unique(Sample_annotation_mca_SHINY$file_matrix)
#cat("Nomes Selecionados", nomes_selecionados, "\n")
count_data_list_Microarray <- count_data_list_Microarray[intersect(names(count_data_list_Microarray), nomes_selecionados)]
#print("Count data:")
#print(count_data_list_rnaseq)
}
View(Sample_annotation_mca_SHINY)
count_data_list_Microarray
Deg_data_list_Microarray
Deg_data_list_Microarray <- readRDS("~/Documents/CaCaoDB_2.0/Deg_data_list_Microarray.rds")
Sample_annotation_mca_SHINY <- Sample_annotation_mca_SHINY %>%
filter(organism == "Homo sapiens")
Deg_data_list_Microarray
colnames(Deg_data_list_Microarray)
